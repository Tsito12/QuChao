set search_path to scautodromo;
select * from carrera;
select * from apuesta;
--Vista de el total de apuestas, el porcentaje para la casa y el restante para repartir
create view info_apuestas as
select id_carrera,sum(monto) as bolsa_total, sum(monto*0.2) as casa, sum(monto*0.8) as bolsa_a_repartir
from apuesta group by id_carrera;

select * from info_apuestas;
--Vista con los pilotos y lo que les han apostado en cada carrera
create view apuesta_piloto as
select apodo, id_carrera, sum(monto) as total_piloto
from apuesta natural join piloto group by apodo,id_carrera order by id_carrera;

select * from apuesta_piloto;
--Funcion que regresa un entero con la suma total de apuestas para un piloto en determinada carrera
create or replace function total_piloto (apodop varchar, carrera int) returns integer as
    $$
    declare
        ap_piloto varchar;
        i_carrera int;
        total int;
    begin
        ap_piloto:=apodop;
        i_carrera:=carrera;
        total:=(select sum(monto) as tot_pil from apuesta natural join piloto where id_carrera=i_carrera and apodo=ap_piloto);
        return total;
    end;
    $$
language plpgsql;
--Prueba de la funcion
select * from total_piloto('El barbas',65432121);

/* Pruebas de si estaba quedando bien la funcion
select * from apuesta;

select sum(monto) as tot_pil from apuesta natural join piloto where id_carrera=65432121 and apodo='El barbas';*/

--Funcion que regresa cuantas carreras ha ganado determinado piloto(por apodo)
create or replace function carreras_ganadas(piloto_a varchar) returns integer as
$BODY$
declare
    ganadas int;
begin
    ganadas:=(select count(posicion) from resultados natural join piloto where posicion=1 and apodo=piloto_a);
    return ganadas;
end;
$BODY$
    language plpgsql;
--Prueba de la funcion
select * from carreras_ganadas('AbiPopo');

--Prueba de la consulta utilizada en la funcion
select count(posicion) as total_ganadas from resultados natural join piloto where posicion=1 and apodo='AbiPopo';

--Funcion que nos regresa todas las carreras,los pilotos y el monto a los que le ha apostado un cliente
create or replace function historial_apuestas(usuario varchar) returns table (carr int, ap_piloto varchar, cantidad int) as
$BODY$
select id_carrera, apodo, monto from apuesta natural join piloto where nombre_usuario=$1;
$BODY$
    language sql;

select * from historial_apuestas('Xicoten');


--Funcion que regresa si una apuesta hecha por un cliente a un piloto en una dteerminada carrera fue ganada o no
create or replace function ganador(usuario varchar, ap_piloto varchar, i_carrera int) returns varchar as
$BODY$
declare
    resultado varchar;
    res int;
begin
    res:=(select posicion from resultados natural join piloto natural join cliente where id_carrera=i_carrera and apodo=ap_piloto and nombre_usuario=usuario);
    if res= 1 then
        resultado:= 'Ganador';
    else
        resultado:='Apuesta Perdida';
    end if;
    return resultado;
end;
$BODY$
    language plpgsql;

select * from ganador('Xicoten','Doc en mat disc',65432121);

--Vista que muestra la carrera, el apodo y el tiempo de los pilotos que han ganado carreras
create view ganadores as
select id_carrera,apodo,tiempo from resultados natural join piloto where posicion = 1;